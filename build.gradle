buildscript {
    ext { springBootVersion = '2.0.3.RELEASE'
	      hibernateVersion = '5.9.1.Final'
		  httpClientVersion = '4.5.2'
		  swaggerVersion = '2.8.0'
		  jgitVersion = '4.11.0.201803080745-r'
		 }
		repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		jcenter()
		}
    dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    			   classpath("com.eriwen:gradle-js-plugin:2.12.0") }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.eriwen.gradle.js'

group = 'com.viglet.turing'
version = '1.0-SNAPSHOT'

description = "viglet-turing"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

task combineSNSystemJs(type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/public/js/sn/build/extract/system"
    dest = "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turSNSystem.js"
}

task combineSNFeatureJs(dependsOn: ':combineSNSystemJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/public/js/sn/build/extract/feature"
    dest = "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turSNFeature.js"
}

task combineSNAllJs(dependsOn: ':combineSNFeatureJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = ["${projectDir}/src/main/resources/public/js/sn/build/extract/main/__turSNFactory.js", "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turSNSystem.js", "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turSNFeature.js"]
    dest = "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turing-sn.js"
}

task minifySNAllJs(dependsOn: ':combineSNAllJs', type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
 	source = "${projectDir}/src/main/resources/public/js/sn/build/aggregate/turing-sn.js"
    dest = file("${projectDir}/src/main/resources/public/js/sn/dist/turing-sn-min.js")
    closure {
        warningLevel = 'QUIET'
    }
}

// Combine JS files
task combineSystemJs(dependsOn: ':minifySNAllJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/public/js/build/extract/system"
    dest = "${projectDir}/src/main/resources/public/js/build/aggregate/turSystem.js"
}

task combineFeatureJs(dependsOn: ':combineSystemJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/public/js/build/extract/feature"
    dest = "${projectDir}/src/main/resources/public/js/build/aggregate/turFeature.js"
}

task combineAllJs(dependsOn: ':combineFeatureJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = ["${projectDir}/src/main/resources/public/js/build/extract/main/__turFactory.js", "${projectDir}/src/main/resources/public/js/build/aggregate/turSystem.js", "${projectDir}/src/main/resources/public/js/build/aggregate/turFeature.js"]
    dest = "${projectDir}/src/main/resources/public/js/build/aggregate/turing.js"
}

task minifyAllJs(dependsOn: ':combineAllJs', type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
 	source = "${projectDir}/src/main/resources/public/js/build/aggregate/turing.js"
    dest = file("${projectDir}/src/main/resources/public/js/dist/turing-min.js")
    closure {
        warningLevel = 'QUIET'
    }
}

task stage(dependsOn: ['build', 'clean'])


compileJava.dependsOn(minifyAllJs)

build.mustRunAfter clean

jar {
    baseName = 'turing'
    version =  '0.1.0'
}

dependencies {
	compile (group: 'org.apache.hadoop', name: 'hadoop-common', version: '2.2.0') {
		exclude(module: 'guava')
		exclude(module: 'commons-logging')
		exclude(module: 'log4j')
		exclude(module: 'slf4j-api')
		exclude(module: 'slf4j-log4j12')
		exclude(module: 'jackson-mapper-asl')
		exclude(module: 'jackson-core-asl')
		exclude(module: 'jersey-core')
		exclude(module: 'jersey-json')
		exclude(module: 'jersey-server')				
		exclude(module: 'jasper-runtime')
		exclude(module: 'jasper-compiler')
		exclude(module: 'servlet-api')
		exclude(module: 'jsp-api')
		

	}
	
	compile (group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: '2.2.0') {
		exclude(module: 'jackson-mapper-asl')
		exclude(module: 'jackson-core-asl')
		exclude(module: 'jersey-core')
		exclude(module: 'jersey-json')
		exclude(module: 'jersey-server')				
		exclude(module: 'jasper-runtime')
		exclude(module: 'jasper-compiler')
		exclude(module: 'servlet-api')
		exclude(module: 'jsp-api')
	}
	compile (group: 'org.apache.hadoop', name: 'hadoop-auth', version: '2.2.0') {
		exclude(module: 'commons-logging')
		exclude(module: 'log4j')
		exclude(module: 'slf4j-api')
		exclude(module: 'slf4j-log4j12')
		exclude(module: 'jackson-mapper-asl')
		exclude(module: 'jackson-core-asl')
		exclude(module: 'jersey-core')
		exclude(module: 'jersey-json')
		exclude(module: 'jersey-server')				
		exclude(module: 'jasper-runtime')
		exclude(module: 'jasper-compiler')
		exclude(module: 'servlet-api')
		exclude(module: 'jsp-api')
	}
	compile (group: 'org.apache.hadoop', name: 'hadoop-core', version: '1.2.1') {
		exclude(module: 'jersey-core')
		exclude(module: 'jersey-json')
		exclude(module: 'jersey-server')
		exclude(module: 'jackson-mapper-asl')
		exclude(module: 'jackson-core-asl')
		exclude(module: 'hsqldb')
	}
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: "${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jersey', version: "${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-activemq', version: "${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf',version: "${springBootVersion}"

	// Jersey   
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version:'2.25'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version:'2.25'
    
    compile group: 'org.hsqldb', name: 'hsqldb', version:'2.4.0'
    
	// Solr
    compile(group: 'org.apache.solr', name: 'solr-solrj', version:'4.6.0') {
exclude(module: 'httpclient')
exclude(module: 'httpmime')
    }
    
    // Commons Logging
    compile group: 'commons-logging', name: 'commons-logging', version:'1.2'
    
    // JSON
    compile group: 'org.json', name: 'json', version:'20140107'
    
    // HTTP Client
    compile(group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.5.2') {
exclude(module: 'commons-logging')
    }
    
    // HTTP Mime
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version:'4.5.2'
    
    // CoreNLP
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version:'3.7.0'
    
    //ASM
    compile group: 'asm', name: 'asm', version:'3.3.1'
    
    // OpenNLP
    compile group: 'org.apache.opennlp', name: 'opennlp-tools', version:'1.7.2'
    
    // Commons-IO
    compile group: 'commons-io', name: 'commons-io', version:'2.5'
    
    // Commons Lang
    compile group: 'commons-lang', name: 'commons-lang', version:'2.6'
    
    // Log4J-Core
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version:'2.7'
    
    // EhCache
    compile group: 'net.sf.ehcache', name: 'ehcache', version:'2.10.3'
    
    // Tika
    compile group: 'org.apache.tika', name: 'tika-core', version:'1.5'
    compile group: 'org.apache.tika', name: 'tika-parsers', version:'1.5'
    
    //ActiveMQ using KahaDB
    compile group: 'org.apache.activemq', name: 'activemq-kahadb-store', version: '5.14.5'

task wrapper(type: Wrapper) {
    gradleVersion = '4.8.1'
}

}
