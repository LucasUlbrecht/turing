var turingApp=angular.module("turingApp",["ui.router","pascalprecht.translate"]);turingApp.factory("vigLocale",["$window",function(a){return{getLocale:function(){var b=a.navigator;if(angular.isArray(b.languages)){if(b.languages.length>0){return b.languages[0].split("-").join("_")}}return((b.language||b.browserLanguage||b.systemLanguage||b.userLanguage)||"").split("-").join("_")}}}]);turingApp.config(["$stateProvider","$urlRouterProvider","$locationProvider","$translateProvider",function(c,a,b,d){d.useSanitizeValueStrategy("escaped");d.translations("en",{NLP_EDIT:"Edit NLP",NLP_EDIT_SUBTITLE:"Change the NLP Settings",NAME:"Name",DESCRIPTION:"Description",VENDORS:"Vendors",HOST:"Host",PORT:"Port",SETTINGS_SAVE_CHANGES:"Save Changes"});d.translations("pt",{NLP_EDIT:"Editar o NLP",NLP_EDIT_SUBTITLE:"Altere as configurações do NLP",NAME:"Nome",DESCRIPTION:"Descrição",VENDORS:"Produtos",HOST:"Host",PORT:"Porta",SETTINGS_SAVE_CHANGES:"Salvar Alterações"});d.fallbackLanguage("en");a.otherwise("/home");c.state("home",{url:"/home",templateUrl:"templates/home.html",controller:"TurHomeCtrl",data:{pageTitle:"Home | Viglet Turing"}}).state("ml",{url:"/ml",templateUrl:"templates/ml/ml.html",data:{pageTitle:"Machine Learning | Viglet Turing"}}).state("ml.instance",{url:"/instance",templateUrl:"templates/ml/ml-instance.html",controller:"TurMLInstanceCtrl",data:{pageTitle:"Machine Learnings | Viglet Turing"}}).state("ml.instance-edit",{url:"/instance/:mlInstanceId",templateUrl:"templates/ml/ml-instance-edit.html",controller:"TurMLInstanceEditCtrl",data:{pageTitle:"Edit Machine Learning | Viglet Turing"}}).state("ml.model",{url:"/model",templateUrl:"templates/ml/model/ml-model.html",controller:"TurMLModelCtrl",data:{pageTitle:"Machine Learning Models | Viglet Turing"}}).state("ml.datagroup",{url:"/datagroup",templateUrl:"templates/ml/data/group/ml-datagroup.html",controller:"TurMLDataGroupCtrl",data:{pageTitle:"Machine Learning Data Groups | Viglet Turing"}}).state("se",{url:"/se",templateUrl:"templates/se/se.html",data:{pageTitle:"Search Engine | Viglet Turing"}}).state("se.instance",{url:"/instance",templateUrl:"templates/se/se-instance.html",controller:"TurSEInstanceCtrl",data:{pageTitle:"Search Engines | Viglet Turing"}}).state("se.instance-edit",{url:"/instance/:seInstanceId",templateUrl:"templates/se/se-instance-edit.html",controller:"TurSEInstanceEditCtrl",data:{pageTitle:"Edit Search Engine | Viglet Turing"}}).state("se.sn",{url:"/sn",templateUrl:"templates/se/sn/se-sn.html",controller:"TurSESNCtrl",data:{pageTitle:"Semantic Navigation | Viglet Turing"}}).state("nlp",{url:"/nlp",templateUrl:"templates/nlp/nlp.html",data:{pageTitle:"NLP | Viglet Turing"}}).state("nlp.instance",{url:"/instance",templateUrl:"templates/nlp/nlp-instance.html",controller:"TurNLPInstanceCtrl",data:{pageTitle:"NLPs | Viglet Turing"}}).state("nlp.instance-edit",{url:"/instance/:nlpInstanceId",templateUrl:"templates/nlp/nlp-instance-edit.html",controller:"TurNLPInstanceEditCtrl",data:{pageTitle:"Edit NLP | Viglet Turing"}}).state("nlp.validation",{url:"/validation",templateUrl:"templates/nlp/nlp-validation.html",controller:"TurNLPValidationCtrl",data:{pageTitle:"NLP Validation | Viglet Turing"}}).state("nlp.entity",{url:"/entity",templateUrl:"templates/nlp/entity/nlp-entity.html",controller:"TurNLPEntityCtrl",data:{pageTitle:"NLP Entities | Viglet Turing"}}).state("nlp.entity-import",{url:"/entity/import",templateUrl:"templates/nlp/entity/nlp-entity-import.html",data:{pageTitle:"Import Entity | Viglet Turing"}}).state("nlp.entity-edit",{url:"/entity/:nlpEntityId",templateUrl:"templates/nlp/entity/nlp-entity-edit.html",controller:"TurNLPEntityEditCtrl",data:{pageTitle:"Edit Entity | Viglet Turing"}}).state("nlp.entity-edit.term",{url:"/term",templateUrl:"templates/nlp/entity/nlp-entity-term.html",data:{pageTitle:"Entity Terms | Viglet Turing"}}).state("organization.user",{url:"/user",templateUrl:"user.html",controller:"TurUserCtrl",data:{pageTitle:"Users | Viglet Turing"}}).state("organization.user-new",{url:"/user/new",templateUrl:"user-item.html",controller:"TurUserNewCtrl",data:{pageTitle:"New User | Viglet Turing"}}).state("organization.user-edit",{url:"/user/:userId",templateUrl:"user-item.html",controller:"TurUserEditCtrl",data:{pageTitle:"Edit User | Viglet Turing"}}).state("organization.role",{url:"/role",templateUrl:"role.html",controller:"TurRoleCtrl",data:{pageTitle:"Roles | Viglet Turing"}}).state("organization.role-new",{url:"/role/new",templateUrl:"role-item.html",controller:"TurRoleNewCtrl",data:{pageTitle:"New Role | Viglet Turing"}}).state("organization.role-edit",{url:"/role/:roleId",templateUrl:"role-item.html",controller:"TurRoleEditCtrl",data:{pageTitle:"Edit Role | Viglet Turing"}}).state("organization.group",{url:"/group",templateUrl:"group.html",controller:"TurGroupCtrl",data:{pageTitle:"Groups | Viglet Turing"}}).state("organization.group-new",{url:"/group/new",templateUrl:"group-item.html",controller:"TurGroupNewCtrl",data:{pageTitle:"New Group | Viglet Turing"}}).state("organization.group-edit",{url:"/group/:groupId",templateUrl:"group-item.html",controller:"TurGroupEditCtrl",data:{pageTitle:"Edit Group | Viglet Turing"}}).state("app",{url:"/app",templateUrl:"app.html",controller:"TurAppCtrl",data:{pageTitle:"Apps | Viglet Turing"}}).state("app-new",{url:"/app/new",templateUrl:"app-item.html",controller:"TurAppNewCtrl",data:{pageTitle:"New App | Viglet Turing",saveButton:"Save"}}).state("app-edit",{url:"/app/:appId",templateUrl:"app-item.html",controller:"TurAppEditCtrl",data:{pageTitle:"Edit App | Viglet Turing",saveButton:"Update Settings"}}).state("app-edit.keys",{url:"/keys",templateUrl:"app-item-keys.html",controller:"TurAppEditCtrl",data:{pageTitle:"Edit App Keys | Viglet Turing"}})}]);turingApp.controller("TurHomeCtrl",["$scope","$http","$window","$state","$rootScope","$translate",function(b,f,e,c,a,d){b.accesses=null;a.$state=c}]);turingApp.controller("TurMLModelCtrl",["$scope","$http","$window","$state","$rootScope","$translate",function(b,f,e,c,a,d){b.mlModels=null;a.$state=c;b.$evalAsync(f.get("/turing/api/ml/model").then(function(g){b.mlModels=g.data}))}]);turingApp.controller("TurMLDataGroupCtrl",["$scope","$http","$window","$state","$rootScope","$translate",function(b,f,e,c,a,d){b.mlDataGroups=null;a.$state=c;b.$evalAsync(f.get("/turing/api/ml/data/group").then(function(g){b.mlDataGroups=g.data}))}]);turingApp.controller("TurMLInstanceCtrl",["$scope","$http","$window","$state","$rootScope","$translate",function(b,f,e,c,a,d){b.mls=null;a.$state=c;b.$evalAsync(f.get("/turing/api/ml/").then(function(g){b.mls=g.data}))}]);turingApp.controller("TurMLInstanceEditCtrl",["$scope","$http","$window","$stateParams","$state","$rootScope","$translate","vigLocale",function(b,h,g,e,d,a,f,c){b.vigLanguage=c.getLocale().substring(0,2);f.use(b.vigLanguage);a.$state=d;b.ml=null;b.mlVendors=null;b.mlInstanceId=e.mlInstanceId;b.$evalAsync(h.get("/turing/api/ml/vendor").then(function(i){b.mlVendors=i.data}));b.$evalAsync(h.get("/turing/api/ml/"+b.mlInstanceId).then(function(i){b.ml=i.data}))}]);turingApp.controller("TurNLPValidationCtrl",["$scope","$http","$window","$state","$rootScope","$translate",function(b,f,e,c,a,d){b.nlps=null;b.results=null;b.text=null;b.nlpmodel=null;a.$state=c;b.$evalAsync(f.get("/turing/api/nlp/").then(function(g){b.nlps=g.data;angular.forEach(g.data,function(i,h){if(i.selected==true){b.nlpmodel=i.id}})}));b.changeView=function(g){postData="turText="+b.text+"&turNLP="+b.nlpmodel;f({method:"POST",url:"/turing/api/nlp/validate",data:postData,headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(j,h,k,i){b.results=j})}}]);turingApp.controller("TurNLPInstanceCtrl",["$scope","$http","$window","$state","$rootScope","$translate",function(b,f,e,c,a,d){b.nlps=null;a.$state=c;b.$evalAsync(f.get("/turing/api/nlp/").then(function(g){b.nlps=g.data}))}]);turingApp.controller("TurNLPEntityCtrl",["$scope","$http","$window","$state","$rootScope","$translate",function(b,f,e,c,a,d){b.entities=null;a.$state=c;b.$evalAsync(f.get("/turing/api/entity/").then(function(g){b.entities=g.data}))}]);turingApp.controller("TurNLPInstanceEditCtrl",["$scope","$http","$window","$stateParams","$state","$rootScope","$translate","vigLocale",function(b,h,g,e,d,a,f,c){b.vigLanguage=c.getLocale().substring(0,2);f.use(b.vigLanguage);a.$state=d;b.nlp=null;b.nlpVendors=null;b.nlpInstanceId=e.nlpInstanceId;b.$evalAsync(h.get("/turing/api/nlp/vendor").then(function(i){b.nlpVendors=i.data}));b.$evalAsync(h.get("/turing/api/nlp/"+b.nlpInstanceId).then(function(i){b.nlp=i.data}));b.mappingSave=function(){b.mappings=null;var i=JSON.stringify(b.mapping);h.put("../api/mapping/"+b.mappingId,i).then(function(l,j,m,k){d.go("mapping")},function(l,j,m,k){d.go("mapping")})}}]);turingApp.controller("TurNLPEntityEditCtrl",["$scope","$http","$window","$stateParams","$state","$rootScope","$translate","vigLocale",function(b,h,g,e,d,a,f,c){b.vigLanguage=c.getLocale().substring(0,2);f.use(b.vigLanguage);a.$state=d;b.entity=null;b.nlpEntityId=e.nlpEntityId;b.$evalAsync(h.get("/turing/api/entity/"+b.nlpEntityId).then(function(i){b.entity=i.data}));b.mappingSave=function(){b.mappings=null;var i=JSON.stringify(b.mapping);h.put("../api/mapping/"+b.mappingId,i).then(function(l,j,m,k){d.go("mapping")},function(l,j,m,k){d.go("mapping")})}}]);turingApp.controller("TurSEInstanceCtrl",["$scope","$http","$window","$state","$rootScope","$translate",function(b,f,e,c,a,d){b.ses=null;a.$state=c;b.$evalAsync(f.get("/turing/api/se").then(function(g){b.ses=g.data}))}]);turingApp.controller("TurSEInstanceEditCtrl",["$scope","$http","$window","$stateParams","$state","$rootScope","$translate","vigLocale",function(b,h,g,e,d,a,f,c){b.vigLanguage=c.getLocale().substring(0,2);f.use(b.vigLanguage);a.$state=d;b.se=null;b.seVendors=null;b.seInstanceId=e.seInstanceId;b.$evalAsync(h.get("/turing/api/se/vendor").then(function(i){b.seVendors=i.data}));b.$evalAsync(h.get("/turing/api/se/"+b.seInstanceId).then(function(i){b.se=i.data}))}]);turingApp.controller("TurSESNCtrl",["$scope","$http","$window","$state","$rootScope","$translate",function(b,f,e,c,a,d){b.seSNs=null;a.$state=c;b.$evalAsync(f.get("/turing/api/se/sn").then(function(g){b.seSNs=g.data}))}]);